# Workflow name
name: Build and Deploy Next.js Site to Google Cloud Storage

# Controls when the workflow will run
on:
  # Triggers the workflow on push events but only for the "main" branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This job builds the Next.js application and uploads the artifact
  build:
    runs-on: ubuntu-latest
    steps:
      # 1. Checks out your repository under $GITHUB_WORKSPACE
      - name: Checkout
        uses: actions/checkout@v4

      # 2. Detects the package manager (npm or yarn) to make the workflow more flexible
      - name: Detect package manager
        id: detect-package-manager
        run: |
          if [ -f "${{ github.workspace }}/yarn.lock" ]; then
            echo "manager=yarn" >> $GITHUB_OUTPUT
            echo "command=install" >> $GITHUB_OUTPUT
            echo "runner=yarn" >> $GITHUB_OUTPUT
            exit 0
          elif [ -f "${{ github.workspace }}/package.json" ]; then
            echo "manager=npm" >> $GITHUB_OUTPUT
            echo "command=ci" >> $GITHUB_OUTPUT
            echo "runner=npx --no-install" >> $GITHUB_OUTPUT
            exit 0
          else
            echo "Unable to determine package manager"
            exit 1
          fi

      # 3. Sets up Node.js for use in the workflow
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: ${{ steps.detect-package-manager.outputs.manager }}

      # 4. Configures the project for static export
      - name: Configure Next.js for static export
        uses: actions/configure-pages@v5
        with:
          static_site_generator: next

      # 5. Installs project dependencies
      - name: Install dependencies
        run: ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.command }}

      # 6. Builds the Next.js application for production
      - name: Build with Next.js
        run: ${{ steps.detect-package-manager.outputs.runner }} next build

      # 7. Uploads the build output from the './out' directory as an artifact
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: nextjs-site # Name of the artifact
          path: ./out      # Path to the directory to upload

  # This job deploys the artifact to the Google Cloud Storage bucket
  deploy:
    # This job requires the 'build' job to complete successfully
    needs: build
    runs-on: ubuntu-latest
    
    # Use a 'gcp' environment you create in repository settings
    environment: gcp
    
    # Sets permissions for authenticating with Google Cloud
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      # 1. Downloads the build artifact created in the 'build' job
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: nextjs-site # Must match the artifact name from the 'build' job
          path: ./out      # Directory to download the artifact to

      # 2. Authenticates to Google Cloud using the Service Account Key
      - id: 'auth'
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      # 3. Deploys the static files to the GCS bucket
      # The `gsutil` command-line tool is automatically available after authentication.
      # -m runs operations in parallel
      # -d deletes files in destination that are not in source
      # -r makes the sync recursive
      - name: Deploy site to Google Cloud Storage
        run: |
          gsutil -m rsync -d -r ./out gs://${{ vars.GCS_BUCKET }}

