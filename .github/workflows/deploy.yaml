# Workflow name
name: Build and Deploy Next.js Site to AWS S3

# Controls when the workflow will run
on:
  # Triggers the workflow on push events but only for the "main" branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This job builds the Next.js application and uploads the artifact
  build:
    runs-on: ubuntu-latest
    steps:
      # 1. Checks out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Sets up Node.js for use in the workflow
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20" # Use a recent LTS version of Node.js
          cache: 'npm'       # Enable caching for npm dependencies

      # 3. Installs project dependencies
      - name: Install dependencies
        run: npm ci # Use 'ci' for faster, more reliable installs in CI environments

      # 4. Builds the Next.js application for production
      - name: Build Next.js site
        run: npm run build # This will generate the static site in the 'out' directory

      # 5. Uploads the build output as an artifact
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: nextjs-site # Name of the artifact
          path: ./out      # Path to the directory to upload

  # This job deploys the artifact to the S3 bucket
  deploy:
    # This job requires the 'build' job to complete successfully
    needs: build
    runs-on: ubuntu-latest
    
    # Use the 'aws' environment you created in repository settings
    environment: aws
    
    # Sets permissions for configuring AWS credentials
    permissions:
      id-token: write # Required for federated identity (if used)
      contents: read  # Required to checkout the repository

    steps:
      # 1. Downloads the build artifact created in the 'build' job
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: nextjs-site # Must match the artifact name from the 'build' job
          path: ./out      # Directory to download the artifact to

      # 2. Configures AWS credentials using the secrets from your 'aws' environment
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.SECRET_ACCESS_KEY }}
          # Use the AWS_REGION variable from the 'aws' environment
          aws-region: ${{ vars.AWS_REGION }}

      # 3. Deploys the static files to the S3 bucket
      - name: Deploy site to S3 bucket
        run: |
          # Use the S3_BUCKET variable from the 'aws' environment
          aws s3 sync ./out s3://${{ vars.S3_BUCKET }} --delete
          
      # 4. (Optional) Invalidate CloudFront distribution
      # If you are using AWS CloudFront as a CDN, uncomment the following lines
      # to automatically clear the cache after a new deployment.
      # - name: Invalidate CloudFront cache
      #   run: |
      #     # IMPORTANT: Replace 'YOUR_CLOUDFRONT_DISTRIBUTION_ID' with your distribution ID
      #     aws cloudfront create-invalidation --distribution-id YOUR_CLOUDFRONT_DISTRIBUTION_ID --paths "/*"

```


